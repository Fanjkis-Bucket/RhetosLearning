Module EmployeeManagment{

	Entity Employee
	{

		ShortString Name { Required; }
		ShortString VAT
		{ 
			Unique;
			RegExMatch '\d{9}' "VAT must have 9 digits";
		}

		Deactivatable;

	}

	Entity Manager
	{

		Extends EmployeeManagment.Employee;

		Integer Bonuses
		{
			MaxValue "10000";
			MinValue "0";
		}

	}

	Entity Record
	{

		Reference EmployeeId EmployeeManagment.Employee;

		DateTime DateOfRecord
		{
			CreationTime;
			SystemRequired;
		}
		ShortString Description
		{
			UserRequired;
		}
		DateTime ModifiedOn
		{
			ModificationTimeOf EmployeeManagment.Record.Description;
		}

		Logging
		{
			Log EmployeeManagment.Record.Description;
			Log EmployeeManagment.Record.EmployeeId;
		}

	}


	Action InsertMultipleEmployees 
	'(parameter, repository, userInfo) =>{


		while(parameter.NumberOfEmployees != 0)

			{
			
			Random random = new Random();
			string newName = "Employee " + parameter.NumberOfEmployees;
			var newEmployee = new Employee { Name = newName, VAT = random.Next(100000000,999999999)ToString(), Activate = true };

			repository.Employee.Insert(newEmployee);

			}

		}'

	{
		Integer NumberOfEmployees;
	}

}